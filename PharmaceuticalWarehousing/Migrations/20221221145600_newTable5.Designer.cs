// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PharmaceuticalWarehousing;

#nullable disable

namespace PharmaceuticalWarehousing.Migrations
{
    [DbContext(typeof(PharmaceuticalWarehousingDbContext))]
    [Migration("20221221145600_newTable5")]
    partial class newTable5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BestBeforeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfManufacture")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ManufacturerId")
                        .HasColumnType("integer");

                    b.Property<int?>("MedicineId")
                        .HasColumnType("integer");

                    b.Property<int?>("PackageId")
                        .HasColumnType("integer");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MedicineId");

                    b.HasIndex("PackageId");

                    b.ToTable("Medication");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Medicine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Medicine");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("PackageTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PackageTypeId");

                    b.ToTable("Package");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.PackageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PackageType");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Medication", b =>
                {
                    b.HasOne("PharmaceuticalWarehousing.Models.Manufacturer", "Manufacturer")
                        .WithMany("Medications")
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("PharmaceuticalWarehousing.Models.Medicine", "Medicine")
                        .WithMany("Medications")
                        .HasForeignKey("MedicineId");

                    b.HasOne("PharmaceuticalWarehousing.Models.Package", "Package")
                        .WithMany("Medications")
                        .HasForeignKey("PackageId");

                    b.Navigation("Manufacturer");

                    b.Navigation("Medicine");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Medicine", b =>
                {
                    b.HasOne("PharmaceuticalWarehousing.Models.Category", "Category")
                        .WithMany("Categories")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Package", b =>
                {
                    b.HasOne("PharmaceuticalWarehousing.Models.PackageType", "PackageType")
                        .WithMany("Packages")
                        .HasForeignKey("PackageTypeId");

                    b.Navigation("PackageType");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Category", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Manufacturer", b =>
                {
                    b.Navigation("Medications");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Medicine", b =>
                {
                    b.Navigation("Medications");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.Package", b =>
                {
                    b.Navigation("Medications");
                });

            modelBuilder.Entity("PharmaceuticalWarehousing.Models.PackageType", b =>
                {
                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
